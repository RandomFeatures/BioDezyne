<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gAnalysis.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gscan.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gSerialn.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gsWeight.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="gscnid.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="btnSearch.ToolTipBody" xml:space="preserve">
    <value>1. Search with all fields blank will return 
    all patients in the database
2. All search fields automatically use wild 
    cards so just entering the letter 'a' in 
    the last name field will return all patients 
    who's last name begins with the letter 'a'</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <metadata name="KryptonManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>32</value>
  </metadata>
</root>